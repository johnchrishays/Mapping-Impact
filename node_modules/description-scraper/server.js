var express = require('express');
var fs = require('fs');
var request = require('request');
var cheerio = require('cheerio');
var app     = express();
var counter = 0;
app.get('/scrape', function(req, res){

  // The URL we will scrape from
    url = 'https://headwatersfoundation.org/grants/past-grantees/appetite-change-1';
    // The structure of our request call
    // The first parameter is our URL
    // The callback function takes 3 parameters, an error, response status code and the html
    request(url, function(error, response, html){
        // First we'll check to make sure no errors occurred when making the request
        console.log("testing");
        if(!error){
            // Next, we'll utilize the cheerio library on the returned html which will essentially give us jQuery functionality
            var $ = cheerio.load(html);
            console.log("not an error");
            // Finally, we'll define the variables we're going to capture
            var description;
            var json = { description : ""};
            $('field field-name-body field-type-text-with-summary field-label-hidden').filter(function(){
            	if(counter==0){
           // Let's store the data we filter into a variable so we can easily see what's going on.
                var data = $(this);
                console.log(data);
           // In examining the DOM we notice that the title rests within the first child element of the header tag. 
           // Utilizing jQuery we can easily navigate and get the text by writing the following code:
                description = data.children('p').text();
                console.log("Description: "+description);
           // Once we have our title, we'll store it to the our json object.
                json.description = description;
                //counter++;
            }})
            
        }

fs.writeFile('output.json', JSON.stringify(json, null, 4), function(err){

    console.log('File successfully written! - Check your project directory for the output.json file');

})
// Finally, we'll just send out a message to the browser reminding you that this app does not have a UI.
res.send('Check your console!')

    }) ;
})

app.listen('8081');

exports = module.exports = app;